@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@model CommonModels.Cabin

@inject ServiceRepository service

@{
    var activities = await service.GetActivities(Model.ResortId);
    var cabinReservations = await service.GetCabinReservations(Model.CabinId);
    var cabins = await service.GetCabin(Model.CabinId);
    ViewData["Title"] = "Details";

    List<DateTime> reservedDays = new List<DateTime>();
    // This are for setting calendar date-cell background-pic to half-red/half-green
    List<DateTime> reservedStartDays = new List<DateTime>();
    List<DateTime> reservedEndDays = new List<DateTime>();
    // This are for setting calendar date-cell in red if Start- and EndDate are same
    List<DateTime> reservedSameDays = new List<DateTime>();

    if (cabinReservations != null)
    {
        foreach (var item in cabinReservations)
        {
            var reservationLength = item.ReservationEndDate - item.ReservationStartDate;
            reservedDays.Add(item.ReservationStartDate);
            reservedStartDays.Add(item.ReservationStartDate);
            reservedEndDays.Add(item.ReservationEndDate);

            if (reservedEndDays.Contains(item.ReservationStartDate)) reservedSameDays.Add(item.ReservationStartDate);
            if (reservedStartDays.Contains(item.ReservationEndDate)) reservedSameDays.Add(item.ReservationEndDate);


            for (int i = 1; i < Convert.ToInt32(reservationLength.TotalDays); i++)
            {
                reservedDays.Add(item.ReservationStartDate.AddDays(i));
            }
        }
    }
}
@section Styles{
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="~/css/datepicker-green.css" type="text/css" />
}

<div style="padding:50px;"></div>
<h1 class="text-uppercase display-3">@Model.CabinName</h1>
<div style="padding:50px;"></div>
<div class="container">
    <div class="row">
        <div class="col-md-6 text-center">
            @if (Model.CabinImages.Count() == 0)
            {
                <img src="~/images/cabin-has-no-images.png" style="height:20em;" />
            }
            else
            {
                <div id="carouselCabinImages" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">

                        @for (int i = 0; i < Model.CabinImages.Count(); i++)
                        {
                            var source = Configuration["BlobStorageConfig:BaseUrl"] + Model.CabinImages[i].ImageUrl;

                            if (i == 0)
                            {
                                <div class="carousel-item active">
                                    <img src="@source" style=" height: 20em; max-width: 400px;" />
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item">
                                    <img src="@source" style="height:20em; max-width:400px;" />
                                </div>
                            }
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselCabinImages" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselCabinImages" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            }
        </div>
        <div class="col-md-2" style="padding:50px;"></div>
        <div class="col-md-4">
            <h3>Varaustilanne</h3>
            <div id="showCabinReservations" style="width:400px"></div>
            <form>
                <button asp-controller="CabinReservations" asp-action="Create" asp-route-id="@Model.CabinId" class="btn btn-success" style="width:255px;">Varaa</button>
            </form>
        </div>
    </div>
</div>

<div style="padding:50px;"></div>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h3>Lomakohteen tiedot</h3>
            <br />
            <p>
                @Model.Description
            </p>
            <br />
            <div>
                <br />
                <dl class="row">
                    <dt class="col-sm-6">
                        @Html.DisplayNameFor(model => model.Area)
                    </dt>
                    <dd class="col-sm-6">
                        @Html.DisplayFor(model => model.Area) m²
                    </dd>

                    <dt class="col-sm-6">
                        @Html.DisplayNameFor(model => model.Rooms)
                    </dt>
                    <dd class="col-sm-6">
                        @Html.DisplayFor(model => model.Rooms)
                    </dd>

                    <dt class="col-sm-6">
                        @Html.DisplayNameFor(model => model.Address)
                    </dt>
                    <dd class="col-sm-6">
                        @Html.DisplayFor(model => model.Address)
                    </dd>
                    <dt class="col-sm-6">
                        @Html.DisplayNameFor(model => model.CabinPricePerDay)
                    </dt>
                    <dd class="col-sm-6">
                        @Html.DisplayFor(model => model.CabinPricePerDay)
                    </dd>
                </dl>
            </div>
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-4">
            @if (activities != null)
            {
                <h3>Lisäpalvelut</h3>
                <ul>
                    @foreach (var item in activities)
                    {
                        <li>@item.ActivityName @item.ActivityPrice €</li>
                    }
                </ul>
            }
        </div>
    </div>
</div>

<div style="padding:100px;"></div>

@section scripts {
    @* Scripts for calendar *@
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script type="text/javascript">

        $(function () {
            // Converting C# List<DateTime> to JS Array of Date-objects
            var reservedDates = new Array();
            for (item of @Html.Raw(Json.Serialize(reservedDays))) {
                reservedDates.push(new Date(Date.parse(item)));
            }

            var startDatesArray = new Array();
            for (item of @Html.Raw(Json.Serialize(reservedStartDays))) {
                startDatesArray.push(new Date(Date.parse(item)));
            }

            var endDatesArray = new Array();
            for (item of @Html.Raw(Json.Serialize(reservedEndDays))) {
                endDatesArray.push(new Date(Date.parse(item)));
            }

            var sameDatesArray = new Array();
            for (item of @Html.Raw(Json.Serialize(reservedSameDays))) {
                sameDatesArray.push(new Date(Date.parse(item)));
            }

            // https://www.dotnetcurry.com/jquery/1209/jqueryui-datepicker-tips-tricks
            // https://api.jqueryui.com/datepicker/
            var dateNow = new Date();
            $("#showCabinReservations").datepicker({
                beforeShowDay: function (date) {
                    if (date.getTime() < (dateNow.getTime() - 86400000)) return [true, 'redday', ""];
                    if (sameDatesArray.find(d => d.getTime() === date.getTime())) return [true, 'redday', "Varattu"];
                    if (startDatesArray.find(d => d.getTime() === date.getTime())) return [true, 'startday', ""];
                    if (endDatesArray.find(d => d.getTime() === date.getTime())) return [true, 'endday', ""];
                    if (reservedDates.find(d => d.getTime() === date.getTime())) return [true, 'redday', "Varattu"];
                    return [true, 'greenday', "Vapaa"];
                }
                , firstDay: 1
                , dayNames: ["Sunnuntai", "Maanantai", "Tiistai", "Keskiviikko", "Torstai", "Perjantai", "Lauantai"]
                , dayNamesMin: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"]
                , monthNames: ["Tammi", "Helmi", "Maalis", "Huhti", "Touko", "Kesä", "Heinä", "Elo", "Syys", "Loka", "Marras", "Joulu"]
                , nextText: "Seuraava"
                , prevText: "Edellinen"
            });
        });

        //$('.carousel').carousel({
        //    interval: 1000
        //})

    </script>
}